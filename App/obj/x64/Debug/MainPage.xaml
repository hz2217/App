<!-- Page 代表 所有写的代码是位于一个界面下 -->
<!-- xmlns:local="using:App" 将using:App替换成local 命名空间-->
<Page x:ConnectionId='1'
    x:Class="App.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:App"
    xmlns:md="using:App.Models"
    xmlns:cvt="using:App"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!-- 
    1. 什么是资源 
        资源是保存在可执行文件中的一种不可执行数据
        应用程序中非程序代码的内容，比如点阵图、颜色、字型、动画/影片档以及字符串常量值，可将它们从程序中独立出来，单独包装成"资源(Resource)
    2. 在标签中使用x:Key属性来标识它
    3. 当要绑定Resource的时候 格式是 ={StaticResource Resource的key}
        大括号代表绑定 StaticResource代表我们所绑定资源的类型（这里表示绑定了在xaml中定义的Resource，并且在app运行之初就被计算)
    -->
    <!--引用页面外部资源-->
    <Page.Resources>
        <!-- 需要注意的是 Converter 是一个 .CS 文件，在页面的资源中声明后才可以使用 -->
        <local:TestConverter x:Key="converter"/>
    </Page.Resources>

    <!-- Page.BottomAppBar 代表页面底部的app栏 不属于页面内部的任何布局中-->
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:ConnectionId='2' x:Name="AddAppBarButton" Icon="Add"                              />
        </CommandBar>
    </Page.BottomAppBar>

    <!-- 控件：控件是指对数据和方法的封装 控件可以有自己的属性和方法
         Grid：是一个布局控件 + 是从左上角开始排列的 当一行不够时，开始排列第二行
         HorizontalAlignment="Stretch" 表示控件的水平方位的位置 是自适应的
            1. StackPanel（Orientation属性值这里默认是Vertical，表示子元素垂直排列）只为子元素在水平方向上分配了多余空间，垂直方向上根据尺寸分配，
                所以设置HorizontalAlignment可以起作用，而设置VerticalAlignment不起作用
            2. 只有给它的子元素分配多余的空间，设置HorizontalAlignment和VerticalAlignment才起作用
    -->
    <!--主视图-->
    <Grid >
        <!-- Grid.Background：通过Grid控件的背景属性值 对背景进行设置-->
        <Grid.Background>
            <ImageBrush Stretch="Fill" ImageSource="Assets/页面背景.jpg"/>
        </Grid.Background>

        <!-- VisualStateManager：控制控件在不同条件下外观的变化-->
        <!-- VisualStateGroup x:Name="" 状态组1 表示截然不同的状态组 比如大小组和颜色组-->
        <!-- VisualState x:Name="" 状态组别内的不同值 蓝色or红色-->

        <!--控制左右视图的显示状态-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:ConnectionId='3' x:Name="UiVisualState">
                <VisualState x:ConnectionId='4' x:Name="MinWidth0">
                    <!-- VisualState.Setters：将所有设置集合起来-->
                    <VisualState.Setters>
                        <!-- Target：目标控件的需要改变的属性值-->
                        <Setter Target="UiLeft.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="UiRight.(UIElement.Visibility)" Value="Collapsed"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:ConnectionId='5' x:Name="MinWidth800">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- 行定义 将grid布局分为几行-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--第一行-->
        <TextBlock x:ConnectionId='6' x:Name="TodoItemTitle" Text="TodoItemList"
                   Grid.Row="0" VerticalAlignment="Center"
                   FontSize="18"
                   Style="{StaticResource MyTextBlockStyle}"/>

        <!--第二行-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--主视图左边项目列表-->
            <!--因为 ListView 绑定的是 ViewModel.AllItems 所以当 AllItems 每增加一项 列表增加一项-->
            <ListView x:ConnectionId='7' x:Name="UiLeft" 
                      Grid.Column="0"
                      IsItemClickEnabled="True"                                                                   
                                                               >

                <!--滚动列表-->
                <ListView.ItemTemplate>
                    <DataTemplate                         >
                        <UserControl x:ConnectionId='20'>
                            <Grid Height="120">
                                <!--状态控制-->
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ImageVisualState">
                                        <VisualState x:Name="DiscoverImage">
                                            <VisualState.Setters>
                                                <Setter Target="TodoItemImage.(UIElement.Visibility)" Value="Visible"/>
                                            </VisualState.Setters>
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="600"/>
                                            </VisualState.StateTriggers>
                                        </VisualState>
                                        <VisualState x:Name="CoverImage">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0"/>
                                            </VisualState.StateTriggers>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <!--每一项的四列五属性的设置-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="42"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>

                                <!--选中属性-->
                                <CheckBox x:ConnectionId='21' x:Name="CheckBox"
                                          Grid.Column="0"
                                                                                                                                               />
                                <!--图片属性-->
                                <Image x:ConnectionId='22' x:Name="TodoItemImage"                                   
                                       Grid.Column="1"
                                       Height="67.5" Width="120" Visibility="Collapsed"/>
                                <!--横线属性-->
                                <Line x:Name="Line" 
                                      Grid.Column="2" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                      Height="20" Stretch="Fill" Stroke="Green" StrokeThickness="2" X1="1" 
                                      Visibility="{Binding Path=IsChecked, ElementName=CheckBox, Mode=OneWay, Converter={StaticResource ResourceKey=converter}}"/>
                                <!--   object value,   Type targetType,     object parameter, string language-->
                                <!--标题属性-->
                                <TextBlock x:ConnectionId='23' x:Name="TodoItemTitle"                                   
                                           Grid.Column="2" Margin="50,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                           Height="20" Width="150"
                                           Style="{StaticResource MyTextBlockStyle}"/>
                                <!--设置按钮属性-->
                                <AppBarButton x:ConnectionId='24' Icon="Setting" IsCompact="True"
                                              Grid.Column="3" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                              Height="50" Width="50"
                                                                          >
                                    <AppBarButton.Flyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="Edit"/>
                                            <MenuFlyoutItem Text="Delete"/>
                                            <MenuFlyoutItem x:ConnectionId='25' Text="Share"                    />
                                        </MenuFlyout>
                                    </AppBarButton.Flyout>
                                </AppBarButton>
                            </Grid>
                        </UserControl>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!--主视图右边项目编辑-->
            <Grid x:ConnectionId='8' x:Name="UiRight"
                  Grid.Column="1">
                <!--滚动设置-->
                <ScrollViewer x:ConnectionId='9'                                     >
                    
                    <StackPanel HorizontalAlignment="Center"
                                Width="400">
                        <!-- 6.1: 添加搜索图标-->
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:ConnectionId='18' x:Name="SearchTextBox"
                                     Height="30" Width="150"
                                     Margin="220,0,0,0"
                                     FontSize="16"/>
                            <Button x:ConnectionId='19' Name="SearchButton"
                                    Height="30" Width="30"
                                    Margin="0,0,0,0"
                                                              />
                        </StackPanel>

                        <!--每一项五行五属性一功能-->
                        <!--图片属性-->
                        <Rectangle Width="400" Height="225" Margin="4" RenderTransformOrigin="0.5,0.5">
                            <Rectangle.Fill>
                                <ImageBrush x:ConnectionId='17' x:Name="TodoItemImage2" ImageSource="Assets/背景.jpg" 
                                            Stretch="Fill"
                                            Opacity="0.7"/>
                            </Rectangle.Fill>
                            <Rectangle.RenderTransform>
                                <CompositeTransform ScaleX="{Binding Value, ElementName=MySlider}"
                                                    ScaleY="{Binding Value, ElementName=MySlider}"/>
                            </Rectangle.RenderTransform>
                        </Rectangle>

                        <!--选择图片和缩放大小属性-->
                        <RelativePanel Width="400">
                            <AppBarButton x:ConnectionId='15' x:Name="SelectPictureButton" Icon="Pictures" Label="Select" 
                                    RelativePanel.AlignBottomWithPanel="True" 
                                                              />
                            <Slider x:ConnectionId='16' x:Name="MySlider"
                                    RelativePanel.AlignRightWithPanel="True" Margin="0,0,25,0"
                                    Width="350" Padding="50,0,50,0" Minimum="0.5" Maximum="1.0" StepFrequency="0.1"
                                                                         />
                        </RelativePanel>

                        <!--标题属性-->
                        <TextBox x:ConnectionId='10' x:Name="TodoItemTitle2" Header="Title" Text="TA" 
                                 Height="70" FontSize="18"
                                 Style="{StaticResource MyTextBoxStyle}"/>
                        <!--内容属性-->
                        <TextBox x:ConnectionId='11' x:Name="TodoItemDetail" Header="Detail" Text="TA IS A GIRL" 
                                 Height="150" FontSize="16"
                                 Style="{StaticResource MyTextBoxStyle}"/>
                        <!--日期属性-->
                        <DatePicker x:ConnectionId='12' x:Name="Datepicker" Header="Date of text" 
                                    Margin="0,10,0,0" 
                                    Width="400"/>
                        <!--添加删除按钮-->
                        <RelativePanel Width="400" Height="100">
                            <Button x:ConnectionId='13' x:Name="Create" Content="Create"
                                                   
                                Style="{StaticResource MyButtonStyle}"/>
                            <Button x:ConnectionId='14' x:Name="cancel" Content="Cancel"
                                RelativePanel.AlignRightWithPanel="True"
                                                   
                                Style="{StaticResource MyButtonStyle}"/>
                        </RelativePanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</Page>

